/*!
 * jQuery Rowspanizer Plugin v0.1 for ADPP
 *
 * https://github.com/hungphambms/adpp-rowspanizer.git
 *
 * Copyright 2018 @hungphambms
 * Released under the MIT license
 *
 * https://github.com/hungphambms/adpp-rowspanizer.git
 */

;(function ($, window, document, undefined) {

    "use strict";

    var rowspanizer = "rowspanizer",
        defaults = {
            vertical_align: "top"
        };

    function f(element, options) {

        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = rowspanizer;
        this.init();

    }

    $.extend(f.prototype, {
        init: function () {

            var _this = this;

            var $table = $(this.element);
            var arr = [];

            $table.find("tr").each(function (r, tr) {
                $(this).find("td").each(function (d, td) {
                    var $td = $(td);
                    var v_dato = $td.html();
                    var group_id = $td.attr("data-group-id");
                    var metric_id = $td.attr("metric-id");

                    // check metric columns
                    if (metric_id && metric_id.indexOf("total_") === -1) {
                        return;
                    }

                    // check empty values
                    if (!v_dato || v_dato === '' || v_dato === '&nbsp;') {
                        return;
                    }

                    if (typeof arr[d] != "undefined"
                        && "dato" in arr[d]
                        && arr[d].dato == v_dato
                        && arr[d].group_id == group_id) {

                        var rs = arr[d].elem.data("rowspan");
                        if (rs == "undefined" || isNaN(rs)) rs = 1;
                        arr[d].elem.data("rowspan", parseInt(rs) + 1).addClass("rowspan-combine");
                        $td.addClass("rowspan-remove");
                    } else {
                        arr[d] = {dato: v_dato, elem: $td, group_id: group_id};
                    }
                    ;
                });
            });

            $(".rowspan-combine").each(function (r, tr) {
                var $this = $(this);
                $this.attr("rowspan", $this.data("rowspan")).css({"vertical-align": _this.settings.vertical_align});
            });

            $(".rowspan-remove").remove();

        }
    });

    $.fn[rowspanizer] = function (options) {
        return this.each(function () {
            if (!$.data(this, "plugin_" + rowspanizer)) {
                $.data(this, "plugin_" +
                    rowspanizer, new f(this, options));
            }
        });
    };

})(jQuery, window, document);
